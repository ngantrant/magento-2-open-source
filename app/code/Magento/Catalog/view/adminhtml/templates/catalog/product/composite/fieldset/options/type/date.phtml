<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

use Magento\Catalog\Api\Data\ProductCustomOptionInterface;
use Magento\Catalog\Block\Product\View\Options\Type\Date;
use Magento\Framework\Escaper;
use Magento\Framework\View\Helper\SecureHtmlRenderer;

/** @var Date $block */
/** @var Escaper $escaper */
/** @var SecureHtmlRenderer $secureRenderer */

$option = $block->getOption();
$optionId = (int)$option->getId();
?>
<div class="admin__field field<?= $option->getIsRequire() ? ' required' : '' ?>">
    <label class="label admin__field-label">
        <?= $escaper->escapeHtml($option->getTitle()) ?>
        <?= /* @noEscape */ $block->getFormattedPrice() ?>
    </label>
    <div class="admin__field-control control">

        <?php if ($option->getType() == ProductCustomOptionInterface::OPTION_TYPE_DATE_TIME
            || $option->getType() == ProductCustomOptionInterface::OPTION_TYPE_DATE): ?>

            <?= $block->getDateHtml() ?>

            <?php if (!$block->useCalendar()):?>
                <?php $scriptString = <<<script
                    require([
                        "prototype",
                        "Magento_Catalog/catalog/product/composite/configure"
                    ], function(){

                        window.dateOption = productConfigure.opConfig.dateOption;
                        Event.observe('options_{$optionId}_month', 'change', dateOption.reloadMonth.bind(dateOption));
                        Event.observe('options_{$optionId}_year', 'change', dateOption.reloadMonth.bind(dateOption));
                    });
script;
                ?>
                <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
            <?php endif; ?>

        <?php endif; ?>

        <?php if ($option->getType() == ProductCustomOptionInterface::OPTION_TYPE_DATE_TIME
            || $option->getType() == ProductCustomOptionInterface::OPTION_TYPE_TIME): ?>
            <span class="time-picker"><?= $block->getTimeHtml() ?></span>
        <?php endif; ?>

        <input type="hidden"
               name="validate_datetime_<?= /* @noEscape */ $optionId ?>"
               class="validate-datetime-<?= /* @noEscape */ $optionId ?>"
               value="" />
        <?php $scriptString = <<<script
            require([
                "jquery",
                "mage/backend/validation"
            ], function(jQuery){

                /*<![CDATA[*/
script;
        if ($option->getIsRequire()):
            $scriptString .= <<<script
                jQuery.validator.addMethod('validate-datetime-{$optionId}', function(v) {
                    var dateTimeParts = jQuery('.datetime-picker[id^="options_{$optionId}"]');
                    for (var i=0; i < dateTimeParts.length; i++) {
                        if (dateTimeParts[i].value == "") return false;
                    }
                    return true;
                }, '{$escaper->escapeJs(__('This is a required option.'))}');
script;
        else:
            $scriptString .= <<<script
                jQuery.validator.addMethod('validate-datetime-{$optionId}', function(v) {
                    var dateTimeParts = jQuery('.datetime-picker[id^="options_{$optionId}"]');
                    var hasWithValue = false, hasWithNoValue = false;
                    var pattern = /day_part$/i;
                    for (var i=0; i < dateTimeParts.length; i++) {
                        if (! pattern.test(dateTimeParts[i].id)) {
                            if (dateTimeParts[i].value === "") {
                                hasWithValue = true;
                            } else {
                                hasWithNoValue = true;
                            }
                        }
                    }
                    return hasWithValue ^ hasWithNoValue;
                }, '{$escaper->escapeJs(__('The field isn\'t complete.'))}');
script;
        endif;
        $scriptString .= <<<script
                /*]]>*/
            });
script;
        ?>
        <?= /* @noEscape */ $secureRenderer->renderTag('script', [], $scriptString, false) ?>
    </div>
</div>
